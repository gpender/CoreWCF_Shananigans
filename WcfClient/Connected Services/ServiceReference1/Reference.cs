//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseOfanyType", Namespace="http://schemas.datacontract.org/2004/07/dotConnected.Services")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.ListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.ListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.meta))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.ServiceOperationStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI))]
    public partial class ServiceResponseOfanyType : object
    {
        
        private ServiceReference1.meta MetaField;
        
        private object ServiceResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.meta Meta
        {
            get
            {
                return this.MetaField;
            }
            set
            {
                this.MetaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ServiceResult
        {
            get
            {
                return this.ServiceResultField;
            }
            set
            {
                this.ServiceResultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="meta", Namespace="http://schemas.datacontract.org/2004/07/dotConnected.Services")]
    public partial class meta : object
    {
        
        private string exceptionMsgField;
        
        private string msgField;
        
        private ServiceReference1.ServiceOperationStatus resultCodeField;
        
        private string statusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string exceptionMsg
        {
            get
            {
                return this.exceptionMsgField;
            }
            set
            {
                this.exceptionMsgField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string msg
        {
            get
            {
                return this.msgField;
            }
            set
            {
                this.msgField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.ServiceOperationStatus resultCode
        {
            get
            {
                return this.resultCodeField;
            }
            set
            {
                this.resultCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItem", Namespace="http://schemas.datacontract.org/2004/07/System.Web.UI.WebControls")]
    public partial class ListItem : object
    {
        
        private bool EnabledField;
        
        private bool SelectedField;
        
        private string TextField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled
        {
            get
            {
                return this.EnabledField;
            }
            set
            {
                this.EnabledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected
        {
            get
            {
                return this.SelectedField;
            }
            set
            {
                this.SelectedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceOperationStatus", Namespace="http://schemas.datacontract.org/2004/07/dotConnected.Services")]
    public enum ServiceOperationStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAvailable = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponseOfArrayOfListItemf0xZzRHI", Namespace="http://schemas.datacontract.org/2004/07/dotConnected.Services")]
    public partial class ServiceResponseOfArrayOfListItemf0xZzRHI : object
    {
        
        private ServiceReference1.meta MetaField;
        
        private ServiceReference1.ListItem[] ServiceResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.meta Meta
        {
            get
            {
                return this.MetaField;
            }
            set
            {
                this.MetaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.ListItem[] ServiceResult
        {
            get
            {
                return this.ServiceResultField;
            }
            set
            {
                this.ServiceResultField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAuditingService")]
    public interface IAuditingService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuditingService/CreateAuditItem", ReplyAction="http://tempuri.org/IAuditingService/CreateAuditItemResponse")]
        ServiceReference1.ServiceResponseOfanyType CreateAuditItem(string auditSource, string operation, string applicationKey, string message, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuditingService/CreateAuditItem", ReplyAction="http://tempuri.org/IAuditingService/CreateAuditItemResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ServiceResponseOfanyType> CreateAuditItemAsync(string auditSource, string operation, string applicationKey, string message, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuditingService/GetAuditSources", ReplyAction="http://tempuri.org/IAuditingService/GetAuditSourcesResponse")]
        ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI GetAuditSources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuditingService/GetAuditSources", ReplyAction="http://tempuri.org/IAuditingService/GetAuditSourcesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI> GetAuditSourcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuditingService/GetAuditOperations", ReplyAction="http://tempuri.org/IAuditingService/GetAuditOperationsResponse")]
        ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI GetAuditOperations(string auditSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuditingService/GetAuditOperations", ReplyAction="http://tempuri.org/IAuditingService/GetAuditOperationsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI> GetAuditOperationsAsync(string auditSource);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IAuditingServiceChannel : ServiceReference1.IAuditingService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class AuditingServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IAuditingService>, ServiceReference1.IAuditingService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AuditingServiceClient() : 
                base(AuditingServiceClient.GetDefaultBinding(), AuditingServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IAuditingService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuditingServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AuditingServiceClient.GetBindingForEndpoint(endpointConfiguration), AuditingServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuditingServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AuditingServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuditingServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AuditingServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuditingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ServiceReference1.ServiceResponseOfanyType CreateAuditItem(string auditSource, string operation, string applicationKey, string message, string userName)
        {
            return base.Channel.CreateAuditItem(auditSource, operation, applicationKey, message, userName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ServiceResponseOfanyType> CreateAuditItemAsync(string auditSource, string operation, string applicationKey, string message, string userName)
        {
            return base.Channel.CreateAuditItemAsync(auditSource, operation, applicationKey, message, userName);
        }
        
        public ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI GetAuditSources()
        {
            return base.Channel.GetAuditSources();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI> GetAuditSourcesAsync()
        {
            return base.Channel.GetAuditSourcesAsync();
        }
        
        public ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI GetAuditOperations(string auditSource)
        {
            return base.Channel.GetAuditOperations(auditSource);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ServiceResponseOfArrayOfListItemf0xZzRHI> GetAuditOperationsAsync(string auditSource)
        {
            return base.Channel.GetAuditOperationsAsync(auditSource);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAuditingService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAuditingService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8088/Auditing.Services/WCFAuditingService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AuditingServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAuditingService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AuditingServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAuditingService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IAuditingService,
        }
    }
}
